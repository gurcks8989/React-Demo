{"ast":null,"code":"var _jsxFileName = \"/Users/hyeokchani/Desktop/React/10-User_input_Form/src/components/BasicForm.js\",\n  _s = $RefreshSig$();\nimport useInput from \"../hooks/useInput\";\nimport Input from \"./Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isNotEmpty = value => value.trim() !== \"\";\nconst isEmail = value => value.includes(\"@\");\nconst BasicForm = props => {\n  _s();\n  const firstName = useInput(isNotEmpty);\n  const lastName = useInput(isNotEmpty);\n  const email = useInput(isEmail);\n  let formIsValid = false;\n  if (firstName.isValid && lastName.isValid && email.isValid) formIsValid = true;\n  const onSubmitFormHandler = event => {\n    event.preventDefault();\n    if (!formIsValid) return;\n    firstName.reset();\n    lastName.reset();\n    email.reset();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmitFormHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        id: \"firstName\",\n        title: \"First Name\",\n        value: firstName.value,\n        onChange: firstName.valueChangeHandler,\n        onBlur: firstName.inputBlurHandler,\n        hasError: firstName.hasError,\n        errorText: \"First name must be not empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        id: \"lastName\",\n        title: \"Last Name\",\n        value: lastName.value,\n        onChange: lastName.valueChangeHandler,\n        onBlur: lastName.inputBlurHandler,\n        hasError: lastName.hasError,\n        errorText: \"Last name must be not empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"email\",\n      id: \"email\",\n      title: \"E-Mail Address\",\n      value: email.value,\n      onChange: email.valueChangeHandler,\n      onBlur: email.inputBlurHandler,\n      hasError: email.hasError,\n      errorText: \"Please enter corrept E-mail Address.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicForm, \"C2nW3P3efo8fouzX+tnL8UFsHcw=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n_c = BasicForm;\nexport default BasicForm;\nvar _c;\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useInput","Input","jsxDEV","_jsxDEV","isNotEmpty","value","trim","isEmail","includes","BasicForm","props","_s","firstName","lastName","email","formIsValid","isValid","onSubmitFormHandler","event","preventDefault","reset","onSubmit","children","className","type","id","title","onChange","valueChangeHandler","onBlur","inputBlurHandler","hasError","errorText","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["/Users/hyeokchani/Desktop/React/10-User_input_Form/src/components/BasicForm.js"],"sourcesContent":["import useInput from \"../hooks/useInput\";\nimport Input from \"./Input\";\n\nconst isNotEmpty = (value) => value.trim() !== \"\" ;\nconst isEmail = (value) => value.includes(\"@\") ;\n\nconst BasicForm = (props) => {\n  const firstName = useInput(isNotEmpty);\n  const lastName = useInput(isNotEmpty);\n  const email = useInput(isEmail);\n\n  let formIsValid = false;\n\n  if (firstName.isValid && lastName.isValid && email.isValid)\n    formIsValid = true;\n\n  const onSubmitFormHandler = (event) => {\n    event.preventDefault();\n    if (!formIsValid) return;\n    firstName.reset();\n    lastName.reset();\n    email.reset();\n  };\n\n  return (\n    <form onSubmit={onSubmitFormHandler}>\n      <div className=\"control-group\">\n        <Input\n          type=\"text\"\n          id=\"firstName\"\n          title=\"First Name\"\n          value={firstName.value}\n          onChange={firstName.valueChangeHandler}\n          onBlur={firstName.inputBlurHandler}\n          hasError={firstName.hasError}\n          errorText=\"First name must be not empty.\"\n        />\n        <Input\n          type=\"text\"\n          id=\"lastName\"\n          title=\"Last Name\"\n          value={lastName.value}\n          onChange={lastName.valueChangeHandler}\n          onBlur={lastName.inputBlurHandler}\n          hasError={lastName.hasError}\n          errorText=\"Last name must be not empty.\"\n        />\n      </div>\n      <Input\n        type=\"email\"\n        id=\"email\"\n        title=\"E-Mail Address\"\n        value={email.value}\n        onChange={email.valueChangeHandler}\n        onBlur={email.inputBlurHandler}\n        hasError={email.hasError}\n        errorText=\"Please enter corrept E-mail Address.\"\n      />\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
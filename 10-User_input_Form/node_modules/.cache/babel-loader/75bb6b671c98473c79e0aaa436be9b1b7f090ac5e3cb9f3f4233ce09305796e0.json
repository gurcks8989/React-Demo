{"ast":null,"code":"var _jsxFileName = \"/Users/hyeokchani/Desktop/React/10-User_input_Form/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport useInput from \"../hooks/useInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const name = useInput(value => value.trim() !== \"\");\n\n  // const [enteredElements, setEnteredElements] = useState({\n  //   name: \"\",\n  //   email: \"\",\n  // });\n  // const [enteredElementsTouched, setEnteredElementsTouched] = useState({\n  //   name: false,\n  //   email: false,\n  // });\n  // const enteredElementsIsValid = {\n  //   name: enteredElements.name.trim() !== \"\",\n  //   email: enteredElements.email.trim() !== \"\",\n  //   emailCondition:\n  //     enteredElements.email.trim() !== \"\" &&\n  //     enteredElements.email.includes(\"@\"),\n  // };\n  // const inputInvalid = {\n  //   name: enteredElementsTouched.name && !enteredElementsIsValid.name,\n  //   email: enteredElementsTouched.email && !enteredElementsIsValid.email,\n  //   emailCondition:\n  //     enteredElementsTouched.email &&\n  //     enteredElementsIsValid.email &&\n  //     !enteredElementsIsValid.emailCondition,\n  // };\n\n  let formIsValid = false;\n\n  // if (Object.values(inputInvalid).every((enterdElement) => enterdElement))\n  if (name.hasError) formIsValid = true;\n  const nameInputChangeHandler = event => {\n    setEnteredElements(prevState => {\n      return {\n        ...prevState,\n        name: event.target.value\n      };\n    });\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredElementsTouched(prevState => {\n      return {\n        ...prevState,\n        name: true\n      };\n    });\n  };\n  const emailInputChangeHandler = event => {\n    setEnteredElements(prevState => {\n      return {\n        ...prevState,\n        email: event.target.value\n      };\n    });\n  };\n  const emailInputBlurHandler = event => {\n    setEnteredElementsTouched(prevState => {\n      return {\n        ...prevState,\n        email: true\n      };\n    });\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    if (Object.values(inputInvalid).every(enteredElement => !enteredElement)) return;\n    console.log(name);\n\n    // nameInputRef.current.value = '' ;\n    // NOT IDEAL, DON'T MANIPULATE THE DOM\n    setEnteredElements({\n      name: \"\",\n      email: \"\"\n    });\n    setEnteredElementsTouched({\n      name: false,\n      email: false\n    });\n  };\n  const errorContent = errorType => /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"error-text \",\n    children: [\"$\", errorType]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `form-control ${inputInvalid.name && \"invalid\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredElements.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), inputInvalid.name && errorContent(\"Name must not be empty.\"), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `form-control ${(inputInvalid.email || inputInvalid.emailCondition) && \"invalid\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your E-mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          onChange: emailInputChangeHandler,\n          onBlur: emailInputBlurHandler,\n          value: enteredElements.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), inputInvalid.email && errorContent(\"Email must not be empty.\"), inputInvalid.emailCondition && errorContent(\"Email must include an '@'.\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"KX9jBLD19Oaqt4W2y+pGAiFZrUA=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["React","useState","useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","name","value","trim","formIsValid","hasError","nameInputChangeHandler","event","setEnteredElements","prevState","target","nameInputBlurHandler","setEnteredElementsTouched","emailInputChangeHandler","email","emailInputBlurHandler","formSubmissionHandler","preventDefault","Object","values","inputInvalid","every","enteredElement","console","log","errorContent","errorType","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","onBlur","enteredElements","emailCondition","disabled","_c","$RefreshReg$"],"sources":["/Users/hyeokchani/Desktop/React/10-User_input_Form/src/components/SimpleInput.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport useInput from \"../hooks/useInput\";\n\nconst SimpleInput = (props) => {\n  const name = useInput((value) => value.trim() !== \"\");\n\n  // const [enteredElements, setEnteredElements] = useState({\n  //   name: \"\",\n  //   email: \"\",\n  // });\n  // const [enteredElementsTouched, setEnteredElementsTouched] = useState({\n  //   name: false,\n  //   email: false,\n  // });\n  // const enteredElementsIsValid = {\n  //   name: enteredElements.name.trim() !== \"\",\n  //   email: enteredElements.email.trim() !== \"\",\n  //   emailCondition:\n  //     enteredElements.email.trim() !== \"\" &&\n  //     enteredElements.email.includes(\"@\"),\n  // };\n  // const inputInvalid = {\n  //   name: enteredElementsTouched.name && !enteredElementsIsValid.name,\n  //   email: enteredElementsTouched.email && !enteredElementsIsValid.email,\n  //   emailCondition:\n  //     enteredElementsTouched.email &&\n  //     enteredElementsIsValid.email &&\n  //     !enteredElementsIsValid.emailCondition,\n  // };\n\n  let formIsValid = false;\n\n  // if (Object.values(inputInvalid).every((enterdElement) => enterdElement))\n  if (name.hasError) formIsValid = true;\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredElements((prevState) => {\n      return { ...prevState, name: event.target.value };\n    });\n  };\n\n  const nameInputBlurHandler = (event) => {\n    setEnteredElementsTouched((prevState) => {\n      return { ...prevState, name: true };\n    });\n  };\n\n  const emailInputChangeHandler = (event) => {\n    setEnteredElements((prevState) => {\n      return { ...prevState, email: event.target.value };\n    });\n  };\n\n  const emailInputBlurHandler = (event) => {\n    setEnteredElementsTouched((prevState) => {\n      return { ...prevState, email: true };\n    });\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    if (Object.values(inputInvalid).every((enteredElement) => !enteredElement))\n      return;\n\n    console.log(name);\n\n    // nameInputRef.current.value = '' ;\n    // NOT IDEAL, DON'T MANIPULATE THE DOM\n    setEnteredElements({ name: \"\", email: \"\" });\n    setEnteredElementsTouched({ name: false, email: false });\n  };\n\n  const errorContent = (errorType) => (\n    <p className=\"error-text \">${errorType}</p>\n  );\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={`form-control ${inputInvalid.name && \"invalid\"}`}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredElements.name}\n        />\n        {inputInvalid.name && errorContent(\"Name must not be empty.\")}\n        <div\n          className={`form-control ${\n            (inputInvalid.email || inputInvalid.emailCondition) && \"invalid\"\n          }`}\n        >\n          <label htmlFor=\"email\">Your E-mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            onChange={emailInputChangeHandler}\n            onBlur={emailInputBlurHandler}\n            value={enteredElements.email}\n          />\n          {inputInvalid.email && errorContent(\"Email must not be empty.\")}\n          {inputInvalid.emailCondition &&\n            errorContent(\"Email must include an '@'.\")}\n        </div>\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAMC,IAAI,GAAGN,QAAQ,CAAEO,KAAK,IAAKA,KAAK,CAACC,IAAI,EAAE,KAAK,EAAE,CAAC;;EAErD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAIC,WAAW,GAAG,KAAK;;EAEvB;EACA,IAAIH,IAAI,CAACI,QAAQ,EAAED,WAAW,GAAG,IAAI;EAErC,MAAME,sBAAsB,GAAIC,KAAK,IAAK;IACxCC,kBAAkB,CAAEC,SAAS,IAAK;MAChC,OAAO;QAAE,GAAGA,SAAS;QAAER,IAAI,EAAEM,KAAK,CAACG,MAAM,CAACR;MAAM,CAAC;IACnD,CAAC,CAAC;EACJ,CAAC;EAED,MAAMS,oBAAoB,GAAIJ,KAAK,IAAK;IACtCK,yBAAyB,CAAEH,SAAS,IAAK;MACvC,OAAO;QAAE,GAAGA,SAAS;QAAER,IAAI,EAAE;MAAK,CAAC;IACrC,CAAC,CAAC;EACJ,CAAC;EAED,MAAMY,uBAAuB,GAAIN,KAAK,IAAK;IACzCC,kBAAkB,CAAEC,SAAS,IAAK;MAChC,OAAO;QAAE,GAAGA,SAAS;QAAEK,KAAK,EAAEP,KAAK,CAACG,MAAM,CAACR;MAAM,CAAC;IACpD,CAAC,CAAC;EACJ,CAAC;EAED,MAAMa,qBAAqB,GAAIR,KAAK,IAAK;IACvCK,yBAAyB,CAAEH,SAAS,IAAK;MACvC,OAAO;QAAE,GAAGA,SAAS;QAAEK,KAAK,EAAE;MAAK,CAAC;IACtC,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,qBAAqB,GAAIT,KAAK,IAAK;IACvCA,KAAK,CAACU,cAAc,EAAE;IAEtB,IAAIC,MAAM,CAACC,MAAM,CAACC,YAAY,CAAC,CAACC,KAAK,CAAEC,cAAc,IAAK,CAACA,cAAc,CAAC,EACxE;IAEFC,OAAO,CAACC,GAAG,CAACvB,IAAI,CAAC;;IAEjB;IACA;IACAO,kBAAkB,CAAC;MAAEP,IAAI,EAAE,EAAE;MAAEa,KAAK,EAAE;IAAG,CAAC,CAAC;IAC3CF,yBAAyB,CAAC;MAAEX,IAAI,EAAE,KAAK;MAAEa,KAAK,EAAE;IAAM,CAAC,CAAC;EAC1D,CAAC;EAED,MAAMW,YAAY,GAAIC,SAAS,iBAC7B7B,OAAA;IAAG8B,SAAS,EAAC,aAAa;IAAAC,QAAA,GAAC,GAAC,EAACF,SAAS;EAAA;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACvC;EAED,oBACEnC,OAAA;IAAMoC,QAAQ,EAAEjB,qBAAsB;IAAAY,QAAA,gBACpC/B,OAAA;MAAK8B,SAAS,EAAG,gBAAeP,YAAY,CAACnB,IAAI,IAAI,SAAU,EAAE;MAAA2B,QAAA,gBAC/D/B,OAAA;QAAOqC,OAAO,EAAC,MAAM;QAAAN,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACvCnC,OAAA;QACEsC,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,MAAM;QACTC,QAAQ,EAAE/B,sBAAuB;QACjCgC,MAAM,EAAE3B,oBAAqB;QAC7BT,KAAK,EAAEqC,eAAe,CAACtC;MAAK;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC5B,EACDZ,YAAY,CAACnB,IAAI,IAAIwB,YAAY,CAAC,yBAAyB,CAAC,eAC7D5B,OAAA;QACE8B,SAAS,EAAG,gBACV,CAACP,YAAY,CAACN,KAAK,IAAIM,YAAY,CAACoB,cAAc,KAAK,SACxD,EAAE;QAAAZ,QAAA,gBAEH/B,OAAA;UAAOqC,OAAO,EAAC,OAAO;UAAAN,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eAC1CnC,OAAA;UACEsC,IAAI,EAAC,OAAO;UACZC,EAAE,EAAC,OAAO;UACVC,QAAQ,EAAExB,uBAAwB;UAClCyB,MAAM,EAAEvB,qBAAsB;UAC9Bb,KAAK,EAAEqC,eAAe,CAACzB;QAAM;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC7B,EACDZ,YAAY,CAACN,KAAK,IAAIW,YAAY,CAAC,0BAA0B,CAAC,EAC9DL,YAAY,CAACoB,cAAc,IAC1Bf,YAAY,CAAC,4BAA4B,CAAC;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACxC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF,eACNnC,OAAA;MAAK8B,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3B/B,OAAA;QAAQ4C,QAAQ,EAAE,CAACrC,WAAY;QAAAwB,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEX,CAAC;AAAChC,EAAA,CA7GIF,WAAW;EAAA,QACFH,QAAQ;AAAA;AAAA+C,EAAA,GADjB5C,WAAW;AA+GjB,eAAeA,WAAW;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
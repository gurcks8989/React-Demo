{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nconst useFetch = (requestConfig, applyData) => {\n  _s();\n  const fetchURL = \"https://react-http-7adb5-default-rtdb.firebaseio.com/tasks.json\";\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRe = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      let response;\n      if (taskText === \"\") response = await fetch(fetchURL);else {\n        response = await fetch(fetchURL, {\n          method: \"POST\",\n          body: JSON.stringify({\n            text: taskText\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n      }\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      if (taskText === \"\") {\n        const loadedTasks = [];\n        for (const taskKey in data) {\n          loadedTasks.push({\n            id: taskKey,\n            text: data[taskKey].text\n          });\n        }\n        taskActionFn(loadedTasks);\n        // setTasks(loadedTasks);\n      } else {\n        const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n        const createdTask = {\n          id: generatedId,\n          text: taskText\n        };\n        taskActionFn(createdTask);\n        //   props.onAddTask(createdTask);\n      }\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n  useEffect(() => {\n    if (taskText === \"\") fetchTasks();\n  }, []);\n  return [fetchTasks, isLoading, error];\n};\n_s(useFetch, \"e4kBt7QYx/QZ/pIdB4oHDuoMTZc=\");\nexport default useFetch;","map":{"version":3,"names":["React","useState","useEffect","useFetch","requestConfig","applyData","fetchURL","isLoading","setIsLoading","error","setError","sendRe","response","taskText","fetch","method","body","JSON","stringify","text","headers","ok","Error","data","json","loadedTasks","taskKey","push","id","taskActionFn","generatedId","name","createdTask","err","message","fetchTasks"],"sources":["/Users/hyeokchani/Desktop/React/09-onwards-to-a-more-realistic-example/src/hooks/useFetch.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst useFetch = (requestConfig, applyData) => {\n  const fetchURL =\n    \"https://react-http-7adb5-default-rtdb.firebaseio.com/tasks.json\";\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRe = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      let response;\n      if (taskText === \"\") response = await fetch(fetchURL);\n      else {\n        response = await fetch(fetchURL, {\n          method: \"POST\",\n          body: JSON.stringify({ text: taskText }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n      }\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n\n      if (taskText === \"\") {\n        const loadedTasks = [];\n        for (const taskKey in data) {\n          loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n        }\n\n        taskActionFn(loadedTasks);\n        // setTasks(loadedTasks);\n      } else {\n        const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n        const createdTask = { id: generatedId, text: taskText };\n\n        taskActionFn(createdTask);\n        //   props.onAddTask(createdTask);\n      }\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    if (taskText === \"\") fetchTasks();\n  }, []);\n  return [fetchTasks, isLoading, error];\n};\n\nexport default useFetch;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,MAAMC,QAAQ,GAAG,CAACC,aAAa,EAAEC,SAAS,KAAK;EAAA;EAC7C,MAAMC,QAAQ,GACZ,iEAAiE;EACnE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMU,MAAM,GAAG,YAAY;IACzBH,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,IAAIE,QAAQ;MACZ,IAAIC,QAAQ,KAAK,EAAE,EAAED,QAAQ,GAAG,MAAME,KAAK,CAACR,QAAQ,CAAC,CAAC,KACjD;QACHM,QAAQ,GAAG,MAAME,KAAK,CAACR,QAAQ,EAAE;UAC/BS,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEC,IAAI,EAAEN;UAAS,CAAC,CAAC;UACxCO,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;MACJ;MACA,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MACA,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,EAAE;MAElC,IAAIX,QAAQ,KAAK,EAAE,EAAE;QACnB,MAAMY,WAAW,GAAG,EAAE;QACtB,KAAK,MAAMC,OAAO,IAAIH,IAAI,EAAE;UAC1BE,WAAW,CAACE,IAAI,CAAC;YAAEC,EAAE,EAAEF,OAAO;YAAEP,IAAI,EAAEI,IAAI,CAACG,OAAO,CAAC,CAACP;UAAK,CAAC,CAAC;QAC7D;QAEAU,YAAY,CAACJ,WAAW,CAAC;QACzB;MACF,CAAC,MAAM;QACL,MAAMK,WAAW,GAAGP,IAAI,CAACQ,IAAI,CAAC,CAAC;QAC/B,MAAMC,WAAW,GAAG;UAAEJ,EAAE,EAAEE,WAAW;UAAEX,IAAI,EAAEN;QAAS,CAAC;QAEvDgB,YAAY,CAACG,WAAW,CAAC;QACzB;MACF;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZvB,QAAQ,CAACuB,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACA1B,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAEDN,SAAS,CAAC,MAAM;IACd,IAAIW,QAAQ,KAAK,EAAE,EAAEsB,UAAU,EAAE;EACnC,CAAC,EAAE,EAAE,CAAC;EACN,OAAO,CAACA,UAAU,EAAE5B,SAAS,EAAEE,KAAK,CAAC;AACvC,CAAC;AAAC,GAnDIN,QAAQ;AAqDd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nconst useFetch = function () {\n  _s();\n  let taskText = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let taskActionFn = arguments.length > 1 ? arguments[1] : undefined;\n  const fetchURL = \"https://react-http-7adb5-default-rtdb.firebaseio.com/tasks.json\";\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const enterTaskHandler = async taskText => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(fetchURL, {\n        method: \"POST\",\n        body: JSON.stringify({\n          text: taskText\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n  const fetchTasks = async taskText => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      let response;\n      if (taskText === \"\") response = await fetch(fetchURL);else {\n        response = await fetch(fetchURL, {\n          method: \"POST\",\n          body: JSON.stringify({\n            text: taskText\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n      }\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      if (taskText === \"\") {\n        const loadedTasks = [];\n        for (const taskKey in data) {\n          loadedTasks.push({\n            id: taskKey,\n            text: data[taskKey].text\n          });\n        }\n        taskActionFn(loadedTasks);\n        // setTasks(loadedTasks);\n      } else {}\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n};\n_s(useFetch, \"e4kBt7QYx/QZ/pIdB4oHDuoMTZc=\");\nexport default useFetch;","map":{"version":3,"names":["React","useState","useEffect","useFetch","taskText","taskActionFn","fetchURL","isLoading","setIsLoading","error","setError","enterTaskHandler","response","fetch","method","body","JSON","stringify","text","headers","ok","Error","data","json","err","message","fetchTasks","loadedTasks","taskKey","push","id"],"sources":["/Users/hyeokchani/Desktop/React/09-onwards-to-a-more-realistic-example/src/hooks/useFetch.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst useFetch = (taskText = \"\", taskActionFn) => {\n  const fetchURL =\n    \"https://react-http-7adb5-default-rtdb.firebaseio.com/tasks.json\";\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const enterTaskHandler = async (taskText) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(fetchURL, {\n        method: \"POST\",\n        body: JSON.stringify({ text: taskText }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n\n      \n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n\n  const fetchTasks = async (taskText) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      let response;\n      if (taskText === \"\") response = await fetch(fetchURL);\n      else {\n        response = await fetch(fetchURL, {\n          method: \"POST\",\n          body: JSON.stringify({ text: taskText }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n      }\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n\n      if (taskText === \"\") {\n        const loadedTasks = [];\n\n        for (const taskKey in data) {\n          loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n        }\n\n        taskActionFn(loadedTasks);\n        // setTasks(loadedTasks);\n      }\n      else{\n\n      }\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n};\n\nexport default useFetch;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,MAAMC,QAAQ,GAAG,YAAiC;EAAA;EAAA,IAAhCC,QAAQ,uEAAG,EAAE;EAAA,IAAEC,YAAY;EAC3C,MAAMC,QAAQ,GACZ,iEAAiE;EACnE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMU,gBAAgB,GAAG,MAAOP,QAAQ,IAAK;IAC3CI,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACP,QAAQ,EAAE;QACrCQ,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,IAAI,EAAEd;QAAS,CAAC,CAAC;QACxCe,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,EAAE;IAGpC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZd,QAAQ,CAACc,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAjB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMkB,UAAU,GAAG,MAAOtB,QAAQ,IAAK;IACrCI,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,IAAIE,QAAQ;MACZ,IAAIR,QAAQ,KAAK,EAAE,EAAEQ,QAAQ,GAAG,MAAMC,KAAK,CAACP,QAAQ,CAAC,CAAC,KACjD;QACHM,QAAQ,GAAG,MAAMC,KAAK,CAACP,QAAQ,EAAE;UAC/BQ,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEC,IAAI,EAAEd;UAAS,CAAC,CAAC;UACxCe,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;MACJ;MACA,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MACA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,EAAE;MAElC,IAAInB,QAAQ,KAAK,EAAE,EAAE;QACnB,MAAMuB,WAAW,GAAG,EAAE;QAEtB,KAAK,MAAMC,OAAO,IAAIN,IAAI,EAAE;UAC1BK,WAAW,CAACE,IAAI,CAAC;YAAEC,EAAE,EAAEF,OAAO;YAAEV,IAAI,EAAEI,IAAI,CAACM,OAAO,CAAC,CAACV;UAAK,CAAC,CAAC;QAC7D;QAEAb,YAAY,CAACsB,WAAW,CAAC;QACzB;MACF,CAAC,MACG,CAEJ;IACF,CAAC,CAAC,OAAOH,GAAG,EAAE;MACZd,QAAQ,CAACc,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAjB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAEDN,SAAS,CAAC,MAAM;IACdwB,UAAU,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;AACR,CAAC;AAAC,GAzEIvB,QAAQ;AA2Ed,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}